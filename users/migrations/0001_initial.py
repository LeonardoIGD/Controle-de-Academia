# Generated by Django 5.2.3 on 2025-06-26 20:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Identificador')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Nome de usuário')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('is_student', models.BooleanField(default=False, verbose_name='É aluno?')),
                ('is_instructor', models.BooleanField(default=False, verbose_name='É instrutor?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InstructorProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Identificador')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('specialization', models.CharField(max_length=100, verbose_name='Especialização')),
                ('certifications', models.TextField(verbose_name='Certificações')),
                ('experience_years', models.PositiveIntegerField(default=0, verbose_name='Anos de Experiência')),
                ('biography', models.TextField(blank=True, verbose_name='Biografia')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponível para novos alunos?')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Criando por')),
                ('user', models.OneToOneField(limit_choices_to={'is_instructor': True}, on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil de Instrutor',
                'verbose_name_plural': 'Perfis de Instrutores',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Identificador')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('birth_date', models.DateField(verbose_name='Data de Nascimento')),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(2.5)], verbose_name='Altura (metros)')),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(300)], verbose_name='Peso (kg)')),
                ('health_restrictions', models.TextField(blank=True, verbose_name='Restrições de Saúde')),
                ('fitness_goals', models.TextField(blank=True, verbose_name='Objetivos Fitness')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Criando por')),
                ('user', models.OneToOneField(limit_choices_to={'is_student': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil de Aluno',
                'verbose_name_plural': 'Perfis de Alunos',
            },
        ),
    ]
